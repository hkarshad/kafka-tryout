---
version: '3'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper-1
    container_name: zookeeper-1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: 'zookeeper-1:2888:3888'
    volumes:
      - ./data/zookeeper-1/data:/var/lib/zookeeper/data
      - ./data/zookeeper-1/datalog:/var/lib/zookeeper/log
    networks:
      kafka-network:
        ipv4_address: 10.6.0.11

  # zookeeper-2:
  #   image: confluentinc/cp-zookeeper:7.2.1
  #   hostname: zookeeper-2
  #   container_name: zookeeper-2
  #   ports:
  #     - "2182:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #     ZOOKEEPER_SERVER_ID: 2
  #     ZOOKEEPER_SERVERS: 'zookeeper-2:2888:3888'
  #   volumes:
  #     - ./data/zookeeper-2/data:/var/lib/zookeeper/data
  #     - ./data/zookeeper-2/datalog:/var/lib/zookeeper/log
  #   networks:
  #     kafka-network:
  #       ipv4_address: 10.6.0.12

  broker-1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper-1
    ports:
      - "29091:29092"
      - "9091:9091"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties"
    volumes:
      - ./data/broker-1/data:/var/lib/kafka/data
    networks:
      kafka-network:
        ipv4_address: 10.6.0.4

  broker-2:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker-2
    container_name: broker-2
    depends_on:
      - zookeeper-1
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9102:9101"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties"
    volumes:
      - ./data/broker-2/data:/var/lib/kafka/data
    networks:
      kafka-network:
        ipv4_address: 10.6.0.2

  broker-3:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker-3
    container_name: broker-3
    depends_on:
      - zookeeper-1
    ports:
      - "29093:29092"
      - "9093:9093"
      - "9103:9101"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties"
    volumes:
      - ./data/broker-3/data:/var/lib/kafka/data
    networks:
      kafka-network:
        ipv4_address: 10.6.0.3

  # broker-10:
  #   image: confluentinc/cp-kafka:7.2.1
  #   hostname: broker-10
  #   container_name: broker-10
  #   depends_on:
  #     - zookeeper-2
  #   ports:
  #     - "29191:29192"
  #     - "9191:9191"
  #     - "9111:9111"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-2:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-10:29192,PLAINTEXT_HOST://localhost:9191
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
  #     KAFKA_JMX_PORT: 9111
  #     KAFKA_JMX_HOSTNAME: localhost
  #   volumes:
  #     - ./data/broker-10/data:/var/lib/kafka/data
  #   networks:
  #     kafka-network:
  #       ipv4_address: 10.6.0.21

  # broker-20:
  #   image: confluentinc/cp-kafka:7.2.1
  #   hostname: broker-20
  #   container_name: broker-20
  #   depends_on:
  #     - zookeeper-2
  #   ports:
  #     - "29192:29192"
  #     - "9192:9192"
  #     - "9112:9111"
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-2:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-20:29192,PLAINTEXT_HOST://localhost:9192
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
  #     KAFKA_JMX_PORT: 9111
  #     KAFKA_JMX_HOSTNAME: localhost
  #   volumes:
  #     - ./data/broker-20/data:/var/lib/kafka/data
  #   networks:
  #     kafka-network:
  #       ipv4_address: 10.6.0.22

  # broker-30:
  #   image: confluentinc/cp-kafka:7.2.1
  #   hostname: broker-30
  #   container_name: broker-30
  #   depends_on:
  #     - zookeeper-2
  #   ports:
  #     - "29193:29192"
  #     - "9193:9193"
  #     - "9113:9111"
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-2:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-30:29192,PLAINTEXT_HOST://localhost:9193
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
  #     KAFKA_JMX_PORT: 9111
  #     KAFKA_JMX_HOSTNAME: localhost
  #   volumes:
  #     - ./data/broker-30/data:/var/lib/kafka/data
  #   networks:
  #     kafka-network:
  #       ipv4_address: 10.6.0.23

  # kafdrop:
  #   container_name: kafdrop
  #   image: obsidiandynamics/kafdrop
  #   ports:
  #     - "9001:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "broker-4:29092"
  #     JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  #   depends_on:
  #     - broker-1
  #     - broker-2
  #     - broker-3
  #   networks:
  #     kafka-network:
  #       ipv4_address: 10.6.0.21

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka1
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker-1:29092,broker-2:29092,broker-3:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:2181
      - KAFKA_CLUSTERS_1_NAME=kafka2
      - KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS=broker-10:29192,broker-20:29192,broker-30:29192
      - KAFKA_CLUSTERS_1_ZOOKEEPER=zookeeper-2:2181
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      # - broker-10
      # - broker-20
      # - broker-30
    networks:
      kafka-network:
        ipv4_address: 10.6.0.51
configs:
  mm2_config:
    file: ./config/connect-mirror-maker.properties
networks:
  kafka-network:
    driver: bridge
    ipam:
      # IP Address Management
      config:
        - subnet: 10.6.0.0/16
  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.2.1
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - broker
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  # connect:
  #   image: cnfldemos/kafka-connect-datagen:0.5.3-7.1.0
  #   hostname: connect
  #   container_name: connect
  #   depends_on:
  #     - broker
  #     - schema-registry
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
  #     CONNECT_REST_ADVERTISED_HOST_NAME: connect
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
  #     CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
  #     CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  # ksqldb-server:
  #   image: confluentinc/cp-ksqldb-server:7.2.1
  #   hostname: ksqldb-server
  #   container_name: ksqldb-server
  #   depends_on:
  #     - broker
  #     - connect
  #   ports:
  #     - "8088:8088"
  #   environment:
  #     KSQL_CONFIG_DIR: "/etc/ksql"
  #     KSQL_BOOTSTRAP_SERVERS: "broker:29092"
  #     KSQL_HOST_NAME: ksqldb-server
  #     KSQL_LISTENERS: "http://0.0.0.0:8088"
  #     KSQL_CACHE_MAX_BYTES_BUFFERING: 0
  #     KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     KSQL_KSQL_CONNECT_URL: "http://connect:8083"
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
  #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

  # ksqldb-cli:
  #   image: confluentinc/cp-ksqldb-cli:7.2.1
  #   container_name: ksqldb-cli
  #   depends_on:
  #     - broker
  #     - connect
  #     - ksqldb-server
  #   entrypoint: /bin/sh
  #   tty: true

  # ksql-datagen:
  #   image: confluentinc/ksqldb-examples:7.2.1
  #   hostname: ksql-datagen
  #   container_name: ksql-datagen
  #   depends_on:
  #     - ksqldb-server
  #     - broker
  #     - schema-registry
  #     - connect
  #   command: "bash -c 'echo Waiting for Kafka to be ready... && \
  #                      cub kafka-ready -b broker:29092 1 40 && \
  #                      echo Waiting for Confluent Schema Registry to be ready... && \
  #                      cub sr-ready schema-registry 8081 40 && \
  #                      echo Waiting a few seconds for topic creation to finish... && \
  #                      sleep 11 && \
  #                      tail -f /dev/null'"
  #   environment:
  #     KSQL_CONFIG_DIR: "/etc/ksql"
  #     STREAMS_BOOTSTRAP_SERVERS: broker:29092
  #     STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
  #     STREAMS_SCHEMA_REGISTRY_PORT: 8081

  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.2.1
  #   depends_on:
  #     - broker
  #     - schema-registry
  #   ports:
  #     - 8082:8082
  #   hostname: rest-proxy
  #   container_name: rest-proxy
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
